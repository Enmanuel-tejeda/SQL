-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 

--1. Which artist appears the most times in the top 50 list?
SELECT artist_name, COUNT(*) AS song_count
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY song_count DESC;

--2. What is the average duration of the songs?
SELECT ROUND(AVG(duration_ms)/60000, 2) AS avg_duration_minutes
FROM BIT_DB.Spotifydata;

--3. Which keys appear the most among the top 50 songs?
SELECT track_name, artist_name, song_key, COUNT(*) AS key_count
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY key_count DESC
LIMIT 50;

--#4 Which artists only had one hit song for the year?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name IN (
    SELECT artist_name
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    HAVING COUNT(*) = 1)
ORDER BY popularity DESC;

--#5 What is the name and artist of the song with the highest danceability for each key?
SELECT artist_name, track_name, song_key, danceability 
FROM BIT_DB.Spotifydata s
WHERE danceability = (
    SELECT MAX(danceability)
    FROM BIT_DB.Spotifydata
    WHERE song_key = s.song_key)
ORDER BY danceability DESC;
